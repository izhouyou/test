<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.camelot.order.dao.NewSalesOrderDAO">
	<!-- 返回值映射map -->
	<resultMap id="newSalesOrderDomain" type="com.camelot.order.domain.NewSalesOrderDomain">
		<result property="salesOrderId" column="sales_order_id" />
		<result property="salesOrderNumber" column="sales_order_number" />
		<result property="firstOrgId" column="first_org_id" />
		<result property="firstOrgNumber" column="first_org_number" />
		<result property="firstOrgName" column="first_org_name" />
		<result property="secondOrgId" column="second_org_id" />
		<result property="secondOrgNumber" column="second_org_number" />
		<result property="secondOrgName" column="second_org_name" />
		<result property="thirdOrgId" column="third_org_id" />
		<result property="thirdOrgNumber" column="third_org_number" />
		<result property="thirdOrgName" column="third_org_name" />
		<result property="storeId" column="store_id" />
		<result property="storeNumber" column="store_number" />
		<result property="storeChannelNumber" column="store_channel_number" />
		<result property="storeName" column="store_name" />
		<result property="niuOrgId" column="niu_org_id" />
		<result property="niuOrgNumber" column="niu_org_number" />
		<result property="niuOrgName" column="niu_org_name" />
		<result property="partnerId" column="partner_id" />
		<result property="partnerNumber" column="partner_number" />
		<result property="partnerName" column="partner_name" />
		<result property="traderId" column="trader_id" />
		<result property="traderNumber" column="trader_number" />
		<result property="traderName" column="trader_name" />
		<result property="salesOrderAmount" column="sales_order_amount" />
		<result property="paymentWayId" column="payment_way_id" />
		<result property="paymentWayNumber" column="payment_way_number" />
		<result property="paymentWayName" column="payment_way_name" />
		<result property="salesOrderSourceId" column="sales_order_source_id" />
		<result property="salesOrderSourceNumber" column="sales_order_source_number" />
		<result property="salesOrderSourceName" column="sales_order_source_name" />
		<result property="salesOrderStatusId" column="sales_order_status_id" />
		<result property="salesOrderStatusNumber" column="sales_order_status_number" />
		<result property="salesOrderStatusName" column="sales_order_status_name" />
		<result property="paymentStatusId" column="payment_status_id" />
		<result property="paymentStatusNumber" column="payment_status_number" />
		<result property="paymentStatusName" column="payment_status_name" />
		<result property="returnStatusId" column="return_status_id" />
		<result property="returnStatusNumber" column="return_status_number" />
		<result property="returnStatusName" column="return_status_name" />
		<result property="customerId" column="customer_id" />
		<result property="customerNumber" column="customer_number" />
		<result property="customerPhoneNumber" column="customer_phone_number" />
		<result property="customerName" column="customer_name" />
		<result property="customerSourceId" column="customer_source_id" />
		<result property="customerSourceNumber" column="customer_source_number" />
		<result property="customerSourceName" column="customer_source_name" />
		<result property="activityId" column="activity_id" />
		<result property="activityNumber" column="activity_number" />
		<result property="activityName" column="activity_name" />
		<result property="activityBrachId" column="activity_brach_id" />
		<result property="activityBatchCode" column="activity_batch_code" />
		<result property="activityBrachName" column="activity_brach_name" />
		<result property="couponId" column="coupon_id" />
		<result property="couponCode" column="coupon_code" />
		<result property="activityPicture" column="activity_picture" />
		<result property="paymentQrCode" column="payment_qr_code" />
		<result property="cancelReasonId" column="cancel_reason_id" />
		<result property="cancelReasonNumber" column="cancel_reason_number" />
		<result property="cancelReasonName" column="cancel_reason_name" />
		<result property="salesOrderVersion" column="sales_order_version" />
		<result property="delFlg" column="del_flg" />
		<result property="orderRemark" column="order_remark" />
		<result property="returnOrderNumber" column="return_order_number" />
		<result property="createUserId" column="create_user_id" />
		<result property="createUserName" column="create_user_name" />
		<result property="updateUserId" column="update_user_id" />
		<result property="updateUserName" column="update_user_name" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="transactionId" column="transaction_id" />
	</resultMap>


	<!-- 查询数量公共sql -->
	<sql id="total_size">
		select count(1) from t_new_sales_order
	</sql>

	<!-- 查询字段公共sql -->
	<sql id="select_all">
		<![CDATA[
		SELECT
			 sales_order_id,
			 sales_order_number,
			 first_org_id,
			 first_org_number,
			 first_org_name,
			 second_org_id,
			 second_org_number,
			 second_org_name,
			 third_org_id,
			 third_org_number,
			 third_org_name,
			 store_id,
			 store_number,
			 store_channel_number,
			 store_name,
			 niu_org_id,
			 niu_org_number,
			 niu_org_name,
			 partner_id,
			 partner_number,
			 partner_name,
			 trader_id,
			 trader_number,
			 trader_name,
			 sales_order_amount,
			 payment_way_id,
			 payment_way_number,
			 payment_way_name,
			 sales_order_source_id,
			 sales_order_source_number,
			 sales_order_source_name,
			 sales_order_status_id,
			 sales_order_status_number,
			 sales_order_status_name,
			 payment_status_id,
			 payment_status_number,
			 payment_status_name,
			 return_status_id,
			 return_status_number,
			 return_status_name,
			 customer_id,
			 customer_number,
			 customer_phone_number,
			 customer_name,
			 customer_source_id,
			 customer_source_number,
			 customer_source_name,
			 activity_id,
			 activity_number,
			 activity_name,
			 activity_brach_id,
			 activity_batch_code,
			 activity_brach_name,
			 coupon_id,
			 coupon_code,
			 activity_picture,
			 payment_qr_code,
			 cancel_reason_id,
			 cancel_reason_number,
			 cancel_reason_name,
			 sales_order_version,
			 del_flg,
			 order_remark,
			 return_order_number,
			 create_user_id,
			 create_user_name,
			 update_user_id,
			 update_user_name,
			 create_date,
			 modify_date,
			 transaction_id
			FROM t_new_sales_order
		]]>
	</sql>

	<sql id="where">
		where 1=1
		<if test = "salesOrderId != null ">
			<![CDATA[ and sales_order_id  = #{salesOrderId} ]]>
		</if>
		<if test = "salesOrderNumber != null and salesOrderNumber != ''">
			<![CDATA[ and sales_order_number like CONCAT('%', #{salesOrderNumber}, '%') ]]>
		</if>
		<if test = "firstOrgId != null ">
			<![CDATA[ and first_org_id  = #{firstOrgId} ]]>
		</if>
		<if test = "firstOrgNumber != null ">
			<![CDATA[ and first_org_number  = #{firstOrgNumber} ]]>
		</if>
		<if test = "firstOrgName != null ">
			<![CDATA[ and first_org_name  = #{firstOrgName} ]]>
		</if>
		<if test = "secondOrgId != null ">
			<![CDATA[ and second_org_id  = #{secondOrgId} ]]>
		</if>
		<if test = "secondOrgNumber != null ">
			<![CDATA[ and second_org_number  = #{secondOrgNumber} ]]>
		</if>
		<if test = "secondOrgName != null ">
			<![CDATA[ and second_org_name  = #{secondOrgName} ]]>
		</if>
		<if test = "thirdOrgId != null ">
			<![CDATA[ and third_org_id  = #{thirdOrgId} ]]>
		</if>
		<if test = "thirdOrgNumber != null ">
			<![CDATA[ and third_org_number  = #{thirdOrgNumber} ]]>
		</if>
		<if test = "thirdOrgName != null ">
			<![CDATA[ and third_org_name  = #{thirdOrgName} ]]>
		</if>
		<if test = "storeId != null ">
			<![CDATA[ and store_id  = #{storeId} ]]>
		</if>
		<if test = "storeNumber != null and storeNumber != ''">
			<![CDATA[ and store_number like CONCAT('%', #{storeNumber}, '%') ]]>
		</if>
		<if test = "storeSearch != null and storeSearch != ''">
			and (store_name like CONCAT('%', #{storeSearch}, '%') or store_number like CONCAT('%', #{storeSearch}, '%'))
		</if>
		<if test = "storeChannelNumber != null ">
			<![CDATA[ and store_channel_number  = #{storeChannelNumber} ]]>
		</if>
		<if test = "storeName != null and storeName != '' ">
			<![CDATA[ and store_name like CONCAT('%', #{storeName}, '%') ]]>
		</if>
		<if test = "niuOrgId != null ">
			<![CDATA[ and niu_org_id  = #{niuOrgId} ]]>
		</if>
		<if test = "niuOrgNumber != null ">
			<![CDATA[ and niu_org_number  = #{niuOrgNumber} ]]>
		</if>
		<if test = "niuOrgName != null ">
			<![CDATA[ and niu_org_name  = #{niuOrgName} ]]>
		</if>
		<if test = "partnerId != null ">
			<![CDATA[ and partner_id  = #{partnerId} ]]>
		</if>
		<if test = "partnerNumber != null ">
			<![CDATA[ and partner_number  = #{partnerNumber} ]]>
		</if>
		<if test = "partnerName != null ">
			<![CDATA[ and partner_name  = #{partnerName} ]]>
		</if>
		<if test = "traderId != null ">
			<![CDATA[ and trader_id  = #{traderId} ]]>
		</if>
		<if test = "traderNumber != null ">
			<![CDATA[ and trader_number  = #{traderNumber} ]]>
		</if>
		<if test = "traderName != null ">
			<![CDATA[ and trader_name  = #{traderName} ]]>
		</if>
		<if test = "salesOrderAmount != null ">
			<![CDATA[ and sales_order_amount  = #{salesOrderAmount} ]]>
		</if>
		<if test = "paymentWayId != null ">
			<![CDATA[ and payment_way_id  = #{paymentWayId} ]]>
		</if>
		<if test = "paymentWayNumber != null ">
			<![CDATA[ and payment_way_number  = #{paymentWayNumber} ]]>
		</if>
		<if test = "paymentWayName != null ">
			<![CDATA[ and payment_way_name  = #{paymentWayName} ]]>
		</if>
		<if test = "salesOrderSourceId != null ">
			<![CDATA[ and sales_order_source_id  = #{salesOrderSourceId} ]]>
		</if>
		<if test = "salesOrderSourceNumber != null ">
			<![CDATA[ and sales_order_source_number  = #{salesOrderSourceNumber} ]]>
		</if>
		<if test = "salesOrderSourceName != null ">
			<![CDATA[ and sales_order_source_name  = #{salesOrderSourceName} ]]>
		</if>
		<if test = "salesOrderStatusId != null ">
			<![CDATA[ and sales_order_status_id  = #{salesOrderStatusId} ]]>
		</if>
		<if test = "salesOrderStatusNumber != null ">
			<![CDATA[ and sales_order_status_number  = #{salesOrderStatusNumber} ]]>
		</if>
		<if test = "salesOrderStatusName != null ">
			<![CDATA[ and sales_order_status_name  = #{salesOrderStatusName} ]]>
		</if>
		<if test = "paymentStatusId != null ">
			<![CDATA[ and payment_status_id  = #{paymentStatusId} ]]>
		</if>
		<if test = "paymentStatusNumber != null ">
			<![CDATA[ and payment_status_number  = #{paymentStatusNumber} ]]>
		</if>
		<if test = "paymentStatusName != null ">
			<![CDATA[ and payment_status_name  = #{paymentStatusName} ]]>
		</if>
		<if test = "returnStatusId != null ">
			<![CDATA[ and return_status_id  = #{returnStatusId} ]]>
		</if>
		<if test = "returnStatusNumber != null ">
			<![CDATA[ and return_status_number  = #{returnStatusNumber} ]]>
		</if>
		<if test = "returnStatusName != null ">
			<![CDATA[ and return_status_name  = #{returnStatusName} ]]>
		</if>
		<if test = "customerId != null ">
			<![CDATA[ and customer_id  = #{customerId} ]]>
		</if>
		<if test = "customerNumber != null ">
			<![CDATA[ and customer_number  = #{customerNumber} ]]>
		</if>
		<if test = "customerPhoneNumber != null and customerPhoneNumber != ''">
			<![CDATA[ and customer_phone_number  = #{customerPhoneNumber} ]]>
		</if>
		<if test = "customerName != null and customerName != ''">
			<![CDATA[ and customer_name  = #{customerName} ]]>
		</if>
		<if test = "customerSourceId != null ">
			<![CDATA[ and customer_source_id  = #{customerSourceId} ]]>
		</if>
		<if test = "customerSourceNumber != null ">
			<![CDATA[ and customer_source_number  = #{customerSourceNumber} ]]>
		</if>
		<if test = "customerSourceName != null ">
			<![CDATA[ and customer_source_name  = #{customerSourceName} ]]>
		</if>
		<if test = "activityId != null ">
			<![CDATA[ and activity_id  = #{activityId} ]]>
		</if>
		<if test = "activityNumber != null and activityNumber != '' ">
			<![CDATA[ and activity_number like CONCAT('%', #{activityNumber}, '%') ]]>
		</if>
		<if test = "activityName != null and activityName != '' ">
			<![CDATA[ and activity_name like CONCAT('%', #{activityName}, '%') ]]>
		</if>
		<if test="activitySearch != null and activitySearch != '' ">
            <![CDATA[ and (activity_number like CONCAT('%', #{activitySearch}, '%') or activity_name like CONCAT('%', #{activitySearch}, '%')) ]]>
        </if>
		<if test = "activityBatchCode != null ">
			<![CDATA[ and activity_brach_id  = #{activityBatchCode} ]]>
		</if>
		<if test = "activityBrachId != null ">
			<![CDATA[ and activity_batch_code  = #{activityBrachId} ]]>
		</if>
		<if test = "activityBrachName != null ">
			<![CDATA[ and activity_brach_name  = #{activityBrachName} ]]>
		</if>
		<if test = "couponId != null ">
			<![CDATA[ and coupon_id  = #{couponId} ]]>
		</if>
		<if test = "couponCode != null ">
			<![CDATA[ and coupon_code  = #{couponCode} ]]>
		</if>
		<if test = "activityPicture != null ">
			<![CDATA[ and activity_picture  = #{activityPicture} ]]>
		</if>
		<if test = "paymentQrCode != null ">
			<![CDATA[ and payment_qr_code  = #{paymentQrCode} ]]>
		</if>
		<if test = "cancelReasonId != null ">
			<![CDATA[ and cancel_reason_id  = #{cancelReasonId} ]]>
		</if>
		<if test = "cancelReasonNumber != null ">
			<![CDATA[ and cancel_reason_number  = #{cancelReasonNumber} ]]>
		</if>
		<if test = "cancelReasonName != null ">
			<![CDATA[ and cancel_reason_name  = #{cancelReasonName} ]]>
		</if>
		<if test = "salesOrderVersion != null ">
			<![CDATA[ and sales_order_version  = #{salesOrderVersion} ]]>
		</if>
		<if test = "delFlg != null ">
			<![CDATA[ and del_flg  = #{delFlg} ]]>
		</if>
		<if test = "orderRemark != null ">
			<![CDATA[ and order_remark  = #{orderRemark} ]]>
		</if>
		<if test = "returnOrderNumber != null ">
			<![CDATA[ and return_order_number  = #{returnOrderNumber} ]]>
		</if>
		<if test = "createUserId != null ">
			<![CDATA[ and create_user_id  = #{createUserId} ]]>
		</if>
		<if test = "createUserName != null ">
			<![CDATA[ and create_user_name  = #{createUserName} ]]>
		</if>
		<if test = "updateUserId != null ">
			<![CDATA[ and update_user_id  = #{updateUserId} ]]>
		</if>
		<if test = "updateUserName != null ">
			<![CDATA[ and update_user_name  = #{updateUserName} ]]>
		</if>
		<if test = "createDate != null ">
			<![CDATA[ and create_date  = #{createDate} ]]>
		</if>
		<if test = "modifyDate != null ">
			<![CDATA[ and modify_date  = #{modifyDate} ]]>
		</if>
		<if test = "transactionId != null ">
			<![CDATA[ and transaction_id  = #{transactionId} ]]>
		</if>
		<if test="beginSearchDate != null ">
			<![CDATA[ AND create_date >= #{beginSearchDate} ]]>
		</if>
		<if test="endSearchDate != null ">
			<![CDATA[ AND create_date <= date_sub(#{endSearchDate},interval -1 day) ]]>
		</if>
		<if test="startCreateDate != null ">
            <![CDATA[ AND TO_DAYS(create_date) >= TO_DAYS(#{startCreateDate}) ]]>
        </if>
        <if test="endCreateDate != null ">
            <![CDATA[ AND TO_DAYS(create_date) <= TO_DAYS(#{endCreateDate}) ]]>
        </if>
		<if test = "salesOrderIdList != null and salesOrderIdList.size() > 0 ">
			and sales_order_id IN
			<foreach item="item" index="index" collection="salesOrderIdList" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test = "orgList != null and orgList.size() > 0 ">
			and third_org_id IN
			<foreach item="item" index="index" collection="orgList" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test = "storeList != null and storeList.size() > 0 ">
			and store_id IN
			<foreach item="item" index="index" collection="storeList" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</sql>

	<select id="queryList" resultMap="newSalesOrderDomain" >
		<include refid="select_all"/>
		<include refid="where" />
		ORDER BY create_date DESC
	</select>


	<select id="queryCount" resultType="long">
		<include refid="total_size"></include>
		<include refid="where"></include>
	</select>

	<!-- 查询单个实体 -->
	<select id="queryDomain" resultMap="newSalesOrderDomain" >
		<include refid="select_all"/>
		<include refid="where" />
	</select>
	<select id="queryById" resultMap="newSalesOrderDomain" >
		select * from t_new_sales_order
		where sales_order_id= #{id}
	</select>

	<!-- 新增 -->
	<insert id="add"  parameterType="com.camelot.order.domain.NewSalesOrderDomain" keyProperty="salesOrderId" useGeneratedKeys="true">
		insert into t_new_sales_order(
				sales_order_id,
				sales_order_number,
				first_org_id,
				first_org_number,
				first_org_name,
				second_org_id,
				second_org_number,
				second_org_name,
				third_org_id,
				third_org_number,
				third_org_name,
				store_id,
				store_number,
				store_channel_number,
				store_name,
				niu_org_id,
				niu_org_number,
				niu_org_name,
				partner_id,
				partner_number,
				partner_name,
				trader_id,
				trader_number,
				trader_name,
				sales_order_amount,
				payment_way_id,
				payment_way_number,
				payment_way_name,
				sales_order_source_id,
				sales_order_source_number,
				sales_order_source_name,
				sales_order_status_id,
				sales_order_status_number,
				sales_order_status_name,
				payment_status_id,
				payment_status_number,
				payment_status_name,
				return_status_id,
				return_status_number,
				return_status_name,
				customer_id,
				customer_number,
				customer_phone_number,
				customer_name,
				customer_source_id,
				customer_source_number,
				customer_source_name,
				activity_id,
				activity_number,
				activity_name,
				activity_brach_id,
				activity_batch_code,
				activity_brach_name,
				coupon_id,
				coupon_code,
				activity_picture,
				payment_qr_code,
				cancel_reason_id,
				cancel_reason_number,
				cancel_reason_name,
				sales_order_version,
				del_flg,
				order_remark,
				return_order_number,
				create_user_id,
				create_user_name,
				update_user_id,
				update_user_name,
				create_date,
				modify_date,
				transaction_id
		)values(
				#{salesOrderId},
				#{salesOrderNumber},
				#{firstOrgId},
				#{firstOrgNumber},
				#{firstOrgName},
				#{secondOrgId},
				#{secondOrgNumber},
				#{secondOrgName},
				#{thirdOrgId},
				#{thirdOrgNumber},
				#{thirdOrgName},
				#{storeId},
				#{storeNumber},
				#{storeChannelNumber},
				#{storeName},
				#{niuOrgId},
				#{niuOrgNumber},
				#{niuOrgName},
				#{partnerId},
				#{partnerNumber},
				#{partnerName},
				#{traderId},
				#{traderNumber},
				#{traderName},
				#{salesOrderAmount},
				#{paymentWayId},
				#{paymentWayNumber},
				#{paymentWayName},
				#{salesOrderSourceId},
				#{salesOrderSourceNumber},
				#{salesOrderSourceName},
				#{salesOrderStatusId},
				#{salesOrderStatusNumber},
				#{salesOrderStatusName},
				#{paymentStatusId},
				#{paymentStatusNumber},
				#{paymentStatusName},
				#{returnStatusId},
				#{returnStatusNumber},
				#{returnStatusName},
				#{customerId},
				#{customerNumber},
				#{customerPhoneNumber},
				#{customerName},
				#{customerSourceId},
				#{customerSourceNumber},
				#{customerSourceName},
				#{activityId},
				#{activityNumber},
				#{activityName},
				#{activityBrachId},
				#{activityBatchCode},
				#{activityBrachName},
				#{couponId},
				#{couponCode},
				#{activityPicture},
				#{paymentQrCode},
				#{cancelReasonId},
				#{cancelReasonNumber},
				#{cancelReasonName},
				#{salesOrderVersion},
				#{delFlg},
				#{orderRemark},
				#{returnOrderNumber},
				#{createUserId},
				#{createUserName},
				#{updateUserId},
				#{updateUserName},
				#{createDate},
				#{modifyDate},
				#{transactionId}
		)
	</insert>
	<!-- 编辑 -->
	<update id="update" parameterType="com.camelot.order.domain.NewSalesOrderDomain">
		update t_new_sales_order
		<set>
			<if test = "salesOrderId != null ">
				sales_order_id = #{salesOrderId},
			</if>
			<if test = "salesOrderNumber != null ">
				sales_order_number = #{salesOrderNumber},
			</if>
			<if test = "firstOrgId != null ">
				first_org_id = #{firstOrgId},
			</if>
			<if test = "firstOrgNumber != null ">
				first_org_number = #{firstOrgNumber},
			</if>
			<if test = "firstOrgName != null ">
				first_org_name = #{firstOrgName},
			</if>
			<if test = "secondOrgId != null ">
				second_org_id = #{secondOrgId},
			</if>
			<if test = "secondOrgNumber != null ">
				second_org_number = #{secondOrgNumber},
			</if>
			<if test = "secondOrgName != null ">
				second_org_name = #{secondOrgName},
			</if>
			<if test = "thirdOrgId != null ">
				third_org_id = #{thirdOrgId},
			</if>
			<if test = "thirdOrgNumber != null ">
				third_org_number = #{thirdOrgNumber},
			</if>
			<if test = "thirdOrgName != null ">
				third_org_name = #{thirdOrgName},
			</if>
			<if test = "storeId != null ">
				store_id = #{storeId},
			</if>
			<if test = "storeNumber != null ">
				store_number = #{storeNumber},
			</if>
			<if test = "storeChannelNumber != null ">
				store_channel_number = #{storeChannelNumber},
			</if>
			<if test = "storeName != null ">
				store_name = #{storeName},
			</if>
			<if test = "niuOrgId != null ">
				niu_org_id = #{niuOrgId},
			</if>
			<if test = "niuOrgNumber != null ">
				niu_org_number = #{niuOrgNumber},
			</if>
			<if test = "niuOrgName != null ">
				niu_org_name = #{niuOrgName},
			</if>
			<if test = "partnerId != null ">
				partner_id = #{partnerId},
			</if>
			<if test = "partnerNumber != null ">
				partner_number = #{partnerNumber},
			</if>
			<if test = "partnerName != null ">
				partner_name = #{partnerName},
			</if>
			<if test = "traderId != null ">
				trader_id = #{traderId},
			</if>
			<if test = "traderNumber != null ">
				trader_number = #{traderNumber},
			</if>
			<if test = "traderName != null ">
				trader_name = #{traderName},
			</if>
			<if test = "salesOrderAmount != null ">
				sales_order_amount = #{salesOrderAmount},
			</if>
			<if test = "paymentWayId != null ">
				payment_way_id = #{paymentWayId},
			</if>
			<if test = "paymentWayNumber != null ">
				payment_way_number = #{paymentWayNumber},
			</if>
			<if test = "paymentWayName != null ">
				payment_way_name = #{paymentWayName},
			</if>
			<if test = "salesOrderSourceId != null ">
				sales_order_source_id = #{salesOrderSourceId},
			</if>
			<if test = "salesOrderSourceNumber != null ">
				sales_order_source_number = #{salesOrderSourceNumber},
			</if>
			<if test = "salesOrderSourceName != null ">
				sales_order_source_name = #{salesOrderSourceName},
			</if>
			<if test = "salesOrderStatusId != null ">
				sales_order_status_id = #{salesOrderStatusId},
			</if>
			<if test = "salesOrderStatusNumber != null ">
				sales_order_status_number = #{salesOrderStatusNumber},
			</if>
			<if test = "salesOrderStatusName != null ">
				sales_order_status_name = #{salesOrderStatusName},
			</if>
			<if test = "paymentStatusId != null ">
				payment_status_id = #{paymentStatusId},
			</if>
			<if test = "paymentStatusNumber != null ">
				payment_status_number = #{paymentStatusNumber},
			</if>
			<if test = "paymentStatusName != null ">
				payment_status_name = #{paymentStatusName},
			</if>
			<if test = "returnStatusId != null ">
				return_status_id = #{returnStatusId},
			</if>
			<if test = "returnStatusNumber != null ">
				return_status_number = #{returnStatusNumber},
			</if>
			<if test = "returnStatusName != null ">
				return_status_name = #{returnStatusName},
			</if>
			<if test = "customerId != null ">
				customer_id = #{customerId},
			</if>
			<if test = "customerNumber != null ">
				customer_number = #{customerNumber},
			</if>
			<if test = "customerPhoneNumber != null ">
				customer_phone_number = #{customerPhoneNumber},
			</if>
			<if test = "customerName != null ">
				customer_name = #{customerName},
			</if>
			<if test = "customerSourceId != null ">
				customer_source_id = #{customerSourceId},
			</if>
			<if test = "customerSourceNumber != null ">
				customer_source_number = #{customerSourceNumber},
			</if>
			<if test = "customerSourceName != null ">
				customer_source_name = #{customerSourceName},
			</if>
			<if test = "activityId != null ">
				activity_id = #{activityId},
			</if>
			<if test = "activityNumber != null ">
				activity_number = #{activityNumber},
			</if>
			<if test = "activityName != null ">
				activity_name = #{activityName},
			</if>
			<if test = "activityBrachId != null ">
				activity_brach_id = #{activityBrachId},
			</if>
			<if test = "activityBatchCode != null ">
				activity_batch_code = #{activityBatchCode},
			</if>
			<if test = "activityBrachName != null ">
				activity_brach_name = #{activityBrachName},
			</if>
			<if test = "couponId != null ">
				coupon_id = #{couponId},
			</if>
			<if test = "couponCode != null ">
				coupon_code = #{couponCode},
			</if>
			<if test = "activityPicture != null ">
				activity_picture = #{activityPicture},
			</if>
			<if test = "paymentQrCode != null ">
				payment_qr_code = #{paymentQrCode},
			</if>
			<if test = "cancelReasonId != null ">
				cancel_reason_id = #{cancelReasonId},
			</if>
			<if test = "cancelReasonNumber != null ">
				cancel_reason_number = #{cancelReasonNumber},
			</if>
			<if test = "cancelReasonName != null ">
				cancel_reason_name = #{cancelReasonName},
			</if>
			<if test = "salesOrderVersion != null ">
				sales_order_version = #{salesOrderVersion},
			</if>
			<if test = "delFlg != null ">
				del_flg = #{delFlg},
			</if>
			<if test = "orderRemark != null ">
				order_remark = #{orderRemark},
			</if>
			<if test = "returnOrderNumber != null ">
				return_order_number = #{returnOrderNumber},
			</if>
			<if test = "createUserId != null ">
				create_user_id = #{createUserId},
			</if>
			<if test = "createUserName != null ">
				create_user_name = #{createUserName},
			</if>
			<if test = "updateUserId != null ">
				update_user_id = #{updateUserId},
			</if>
			<if test = "updateUserName != null ">
				update_user_name = #{updateUserName},
			</if>
			<if test = "createDate != null ">
				create_date = #{createDate},
			</if>
			<if test = "modifyDate != null ">
				modify_date = #{modifyDate},
			</if>
			<if test = "transactionId != null ">
				transaction_id = #{transactionId}
			</if>
		</set>
		where sales_order_id= #{salesOrderId}
	</update>


	<delete id="delete">
		delete from t_new_sales_order
		<if test = "salesOrderId != null ">
			where sales_order_id= #{id}
		</if>
		<if test = "salesOrderId == null ">
			where 1 = 3
		</if>
	</delete>
	<!-- 查询参加活动的销售订单信息 -->
	<select id="queryListActivityData" resultMap="newSalesOrderDomain">
	   SELECT
	       sales_order_id,
	       sales_order_number,
	       first_org_name,
	       second_org_name,
	       third_org_name,
	       store_number,
	       store_name,
	       customer_source_name,
	       activity_number,
	       activity_name,
	       activity_brach_id,
	       coupon_code,
	       activity_picture,
	       create_date,
	       order_remark,
	       store_channel_number,
	       partner_number
       FROM t_new_sales_order
       <include refid="where" />
       and activity_id != '' and activity_id IS NOT NULL 
       ORDER BY create_date DESC
	</select>
	<!-- 查询订单总数/销售总额 -->
	<select id="queryCountAmount" resultType="java.util.HashMap">
        select 
            COUNT(1) 'salesOrderTotal',
            SUM(sales_order_amount) 'salesAmountTotal'
        from t_new_sales_order 
        <include refid="where" />
    </select>
    <!-- 查询销售订单id集合 -->
    <select id="queryListSalesOrderId" resultType="java.lang.Long">
       SELECT
           sales_order_id
       FROM t_new_sales_order
       <include refid="where" />
    </select>
    <!-- 查询今日订单/销售统计(图)信息 -->
    <select id="queryListToDayOrderTrend" resultType="java.util.HashMap">
        select 
            COUNT(1) 'statisticsOrderAmount',
            SUM(sales_order_amount) 'statisticsAmount',
            substr(create_date, 12, 2) 'statisticsDate',
            substr(create_date, 12, 2) 'statisticsDay'
        from t_new_sales_order 
        <include refid="where" />
        GROUP BY
            substr(create_date, 1, 13)
    </select>
    <!-- 查询近7天/近30天订单/销售统计(图)信息 -->
    <select id="statisticsOrderTrend" resultType="java.util.HashMap">
        select 
            COUNT(1) 'statisticsOrderAmount',
            SUM(sales_order_amount) 'statisticsAmount',
            substr(create_date, 1, 10) 'statisticsDate',
            substr(create_date, 9, 2) 'statisticsDay'
        from t_new_sales_order
        <include refid="where" />
        GROUP BY
            substr(create_date, 1, 10)
    </select>
    
    <!-- 查询取消订单信息 -->
    <select id="queryListCancleTotal" resultType="java.util.HashMap" >
        select 
            COUNT(1) 'notBuyAmount',
            store_id 'storeId',
            store_number 'storeNumber',
            store_name 'storeName'
        from t_new_sales_order 
        <include refid="where" />
        GROUP BY store_name
    </select>
    
    <!-- 消费者来源分析信息 -->
    <select id="queryListCustomerSource" resultType="java.util.HashMap" >
        select 
            COUNT(1) 'amount',
            customer_source_name 'name'
        from t_new_sales_order 
        <include refid="where" />
        GROUP BY customer_source_name
    </select>
    <!-- 未购买原因分析信息 -->
    <select id="queryListNotBuyCause" resultType="java.util.HashMap" >
        select 
            COUNT(1) 'amount',
            cancel_reason_name 'name'
        from t_new_sales_order 
        <include refid="where" />
        GROUP BY cancel_reason_name
    </select>

	<select id="getMaxSalesOrderNumber" resultType="java.lang.String">
		select MAX(RIGHT(sales_order_number,5)) from t_new_sales_order
		where create_date like CONCAT(#{nowDate}, '%')
	</select>



	<!-- 门店销售统计 list -->
	<select id="queryStatsSalesOrderPage" resultType="java.util.HashMap" >
		select store_id as storeId,store_number as storeNumber,store_channel_number as storeChannelNumber,store_name as storeName,count(1) as saleAmount
		from t_new_sales_order o,t_new_sales_order_goods g
		<include refid="where" />
		and g.sales_order_id = o.sales_order_id and g.first_category_id=1 and o.return_status_id =226
		GROUP BY store_id order by saleAmount desc ,storeNumber
	</select>

	<!-- 门店销售统计  来源 分类-->
	<select id="queryStatsSalesBySource" resultType="java.util.HashMap" >
		select customer_source_name as name, count(1) as amount
		from t_new_sales_order o,t_new_sales_order_goods g
		<include refid="where" />
		and g.sales_order_id = o.sales_order_id and g.first_category_id=1 and o.return_status_id =226
		GROUP BY customer_source_id
	</select>

	<!-- 门店销售统计  活动 分类-->
	<select id="queryStatsSaleByActive" resultType="java.util.HashMap" >
		select (case activity_name when '' then '未参加活动' else IFNULL(activity_name,'未参加活动') end ) as name, count(1) as amount
		from t_new_sales_order o,t_new_sales_order_goods g
		<include refid="where" />
		and g.sales_order_id = o.sales_order_id and g.first_category_id=1 and o.return_status_id =226
		GROUP BY activity_id
	</select>

	<!-- 门店销售统计  车型 分类-->
	<select id="queryStatsSaleByCategory" resultType="java.util.HashMap" >
		select third_category_name as name,count(1) as amount
		from t_new_sales_order o ,t_new_sales_order_goods g
		<include refid="where" />
		and g.sales_order_id = o.sales_order_id and g.first_category_id=1 and o.return_status_id =226
		GROUP BY first_category_id,second_category_id,third_category_id
	</select>




</mapper>